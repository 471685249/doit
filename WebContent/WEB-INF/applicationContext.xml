<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		    <property name="url" value="jdbc:mysql://localhost:3306/doit?useUnicode=true&amp;characterEncoding=UTF-8"/>
		   <!--  <property name="url" value="jdbc:mysql://localhost:3306/doit?characterEncoding=UTF-8"/> -->
		    <property name="username" value="root"/>
		    <property name="password" value="000000"/>
		     <!-- 连接池启动时的初始值 -->
			<property name="initialSize" value="1000"/>
		 	<!-- 连接池的最大值 -->
		 	<property name="maxActive" value="3000"/> 
	 		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
			<property name="maxIdle" value="2"/>
			<!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
			<property name="minIdle" value="1"/>
	</bean>
	<!-- 配置会话工厂() -->
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" destroy-method="destroy">
	     <!-- 设置数据源 -->
	     <property name="dataSource" ref="dataSource"/>
	     <!-- 接管了hibernate对象映射文件 -->
	     <property name="annotatedClasses">
		    <list>
		    	<!-- ！！！多一个实体就在这新增一个对应起来 -->
		    	<value>com.doit.vo.TArticle</value>
		    	<value>com.doit.vo.TBook</value>
		    	<value>com.doit.vo.TComment</value>
		    	<value>com.doit.vo.TLink</value>
		    	<value>com.doit.vo.TSort</value>
		    	<value>com.doit.vo.TUser</value>
		    </list>
	     </property>
	     <property name="hibernateProperties">
		    <value>
		        	hibernate.dialect=org.hibernate.dialect.MySQLDialect
		        	hibernate.hbm2ddl.auto=update
					hibernate.show_sql=true
					hibernate.cache.use_second_level_cache=true
	        	    hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
	        	    hibernate.generate_statistics=true	  
	        	    hibernate.connection.release_mode=after_statement    
		 </value>
	    </property>
	</bean>
	<!-- DAO层实例 -->
	<bean id="dao" class="com.doit.dao.impl.DaoImpl">
	  <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- ！！！多一个服务就在这新增一个对应起来 -->
	<!-- IArticleService对象 -->
	<bean id="articleService" class="com.doit.service.impl.ArticleServiceImpl">
	      <property name="dao" ref="dao"/>
	</bean>
	<bean id="bookService" class="com.doit.service.impl.BookServiceImpl">
	      <property name="dao" ref="dao"/>
	</bean>
	<bean id="commentService" class="com.doit.service.impl.CommentServiceImpl">
	      <property name="dao" ref="dao"/>
	</bean>
	<bean id="linkService" class="com.doit.service.impl.LinkServiceImpl">
	      <property name="dao" ref="dao"/>
	</bean>
	<bean id="sortService" class="com.doit.service.impl.SortServiceImpl">
	      <property name="dao" ref="dao"/>
	</bean>
	<bean id="userService" class="com.doit.service.impl.UserServiceImpl">
	      <property name="dao" ref="dao"/>
	</bean>
</beans>